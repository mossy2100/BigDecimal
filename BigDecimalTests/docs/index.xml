<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Galaxon.BigNumbers.BigDecimalTests</name>
    </assembly>
    <members>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConstantsTests.TestComputePi10000">
            <remarks>
            This takes a few minutes (about 7 on my computer at the time of typing), so sit back, relax,
            sip your coffee, and enjoy the relentless march of time.
            </remarks>
            <see href="http://newton.ex.ac.uk/research/qsystems/collabs/pi/pi5.txt" />
        </member>
        <member name="T:Galaxon.BigNumbers.BigDecimalTests.ConversionTests">
            <summary>
            Test conversions between BigDecimal and the standard number types.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._sbyteTestValues">
            <summary>
            A few test values for sbyte.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToSbyte">
            <summary>
            Test casting from BigDecimal to sbyte and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ThrowsExceptionWhenCastingToSbyteOutsideOfValidRange">
            <summary>
            Test casting from BigDecimal to sbyte, outside the valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedSbyteInRangeTest">
            <summary>
            Test converting from sbyte to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedSbyteInRangeTest">
            <summary>
            Test converting from BigDecimal to sbyte with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedSbyteOverflowTest">
            <summary>
            Test converting from a BigDecimal to sbyte with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingSbyteInRangeTest">
            <summary>
            Test converting from a BigDecimal to sbyte, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingSbyteOverflowTest">
            <summary>
            Test converting from a BigDecimal to sbyte, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._byteTestValues">
            <summary>
            A few test values for byte.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToByte">
            <summary>
            Test casting from BigDecimal to byte and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ThrowsExceptionWhenCastingToByteOutsideOfValidRange">
            <summary>
            Test casting from BigDecimal to byte, outside the valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedByteInRangeTest">
            <summary>
            Test converting from byte to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedByteInRangeTest">
            <summary>
            Test converting from BigDecimal to byte with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedByteOverflowTest">
            <summary>
            Test converting from a BigDecimal to byte with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingByteInRangeTest">
            <summary>
            Test converting from a BigDecimal to byte, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingByteOverflowTest">
            <summary>
            Test converting from a BigDecimal to byte, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._shortTestValues">
            <summary>
            A few test values for short.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToShort">
            <summary>
            Test casting from BigDecimal to short and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ThrowsExceptionWhenCastingToShortOutsideOfValidRange">
            <summary>
            Test casting from BigDecimal to short, outside the valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedShortInRangeTest">
            <summary>
            Test converting from short to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedShortInRangeTest">
            <summary>
            Test converting from BigDecimal to short with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedShortOverflowTest">
            <summary>
            Test converting from a BigDecimal to short with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingShortInRangeTest">
            <summary>
            Test converting from a BigDecimal to short, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingShortOverflowTest">
            <summary>
            Test converting from a BigDecimal to short, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._ushortTestValues">
            <summary>
            A few test values for ushort.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToUshort">
            <summary>
            Test casting from BigDecimal to ushort and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ThrowsExceptionWhenCastingToUshortOutsideOfValidRange">
            <summary>
            Test casting from BigDecimal to ushort, outside the valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedUshortInRangeTest">
            <summary>
            Test converting from ushort to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedUshortInRangeTest">
            <summary>
            Test converting from BigDecimal to ushort with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedUshortOverflowTest">
            <summary>
            Test converting from a BigDecimal to ushort with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingUshortInRangeTest">
            <summary>
            Test converting from a BigDecimal to ushort, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingUshortOverflowTest">
            <summary>
            Test converting from a BigDecimal to ushort, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._intTestValues">
            <summary>
            A few test values for int.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToInt">
            <summary>
            Test casting from BigDecimal to int and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ThrowsExceptionWhenCastingToIntOutsideOfValidRange">
            <summary>
            Test casting from BigDecimal to int, outside the valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedIntInRangeTest">
            <summary>
            Test converting from int to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedIntInRangeTest">
            <summary>
            Test converting from BigDecimal to int with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedIntOverflowTest">
            <summary>
            Test converting from a BigDecimal to int with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingIntInRangeTest">
            <summary>
            Test converting from a BigDecimal to int, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingIntOverflowTest">
            <summary>
            Test converting from a BigDecimal to int, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._uintTestValues">
            <summary>
            A few test values for uint.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToUint">
            <summary>
            Test casting from BigDecimal to uint and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ThrowsExceptionWhenCastingToUintOutsideOfValidRange">
            <summary>
            Test casting from BigDecimal to long, outside the valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedUintInRangeTest">
            <summary>
            Test converting from uint to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedUintInRangeTest">
            <summary>
            Test converting from BigDecimal to uint with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedUintOverflowTest">
            <summary>
            Test converting from a BigDecimal to uint with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingUintInRangeTest">
            <summary>
            Test converting from a BigDecimal to uint, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingUintOverflowTest">
            <summary>
            Test converting from a BigDecimal to uint, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._longTestValues">
            <summary>
            A few test values for long.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToLong">
            <summary>
            Test casting from BigDecimal to long and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ThrowsExceptionWhenCastingToLongOutsideOfValidRange">
            <summary>
            Test an OverflowException is thrown when casting from BigDecimal to long, outside the
            valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedLongInRangeTest">
            <summary>
            Test converting from long to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedLongInRangeTest">
            <summary>
            Test converting from BigDecimal to long with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedLongOverflowTest">
            <summary>
            Test converting from a BigDecimal to long with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingLongInRangeTest">
            <summary>
            Test converting from a BigDecimal to long, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingLongOverflowTest">
            <summary>
            Test converting from a BigDecimal to long, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._ulongTestValues">
            <summary>
            A few test values for ulong.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToUlong">
            <summary>
            Test casting from BigDecimal to ulong and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ThrowsExceptionWhenCastingToUlongOutsideOfValidRange">
            <summary>
            Test casting from BigDecimal to ulong, outside the valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedUlongInRangeTest">
            <summary>
            Test converting from ulong to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedUlongInRangeTest">
            <summary>
            Test converting from BigDecimal to ulong with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedUlongOverflowTest">
            <summary>
            Test converting from a BigDecimal to ulong with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingUlongInRangeTest">
            <summary>
            Test converting from a BigDecimal to ulong, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingUlongOverflowTest">
            <summary>
            Test converting from a BigDecimal to ulong, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._int128TestValues">
            <summary>
            A few test values for Int128.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToInt128">
            <summary>
            Test casting from BigDecimal to Int128 and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ThrowsExceptionWhenCastingToInt128OutsideOfValidRange">
            <summary>
            Test casting from BigDecimal to Int128, outside the valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedInt128InRangeTest">
            <summary>
            Test converting from Int128 to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedInt128InRangeTest">
            <summary>
            Test converting from BigDecimal to Int128 with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedInt128OverflowTest">
            <summary>
            Test converting from a BigDecimal to Int128 with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingInt128InRangeTest">
            <summary>
            Test converting from a BigDecimal to Int128, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingInt128OverflowTest">
            <summary>
            Test converting from a BigDecimal to Int128, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._uint128TestValues">
            <summary>
            A few test values for UInt128.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToUInt128">
            <summary>
            Test casting from BigDecimal to UInt128 and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ThrowsExceptionWhenCastingToUInt128OutsideOfValidRange">
            <summary>
            Test casting from BigDecimal to UInt128, outside the valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedUInt128InRangeTest">
            <summary>
            Test converting from UInt128 to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedUInt128InRangeTest">
            <summary>
            Test converting from BigDecimal to UInt128 with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedUInt128OverflowTest">
            <summary>
            Test converting from a BigDecimal to UInt128 with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingUInt128InRangeTest">
            <summary>
            Test converting from a BigDecimal to UInt128, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingUInt128OverflowTest">
            <summary>
            Test converting from a BigDecimal to UInt128, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.GetHalfTestValues">
            <summary>
            A few test values for Half.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._halfNegInf">
            <summary>
            Test value for negative overflow for Half.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._halfPosInf">
            <summary>
            Test value for positive overflow for Half.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToHalf">
            <summary>
            Test casting from BigDecimal to Half and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedHalfInRangeTest">
            <summary>
            Test converting from Half to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedHalfInRangeTest">
            <summary>
            Test converting from BigDecimal to Half with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedHalfOverflowTest">
            <summary>
            Test converting from a BigDecimal to Half with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingHalfInRangeTest">
            <summary>
            Test converting from a BigDecimal to Half, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingHalfOverflowTest">
            <summary>
            Test converting from a BigDecimal to Half, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.GetFloatTestValues">
            <summary>
            A few test values for float.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._floatNegInf">
            <summary>
            Test value for negative overflow for float.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._floatPosInf">
            <summary>
            Test value for positive overflow for float.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToFloat">
            <summary>
            Test casting from BigDecimal to float and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ReturnsInfinityWhenCastingToFloatOutsideOfValidRange">
            <summary>
            Test casting from BigDecimal to float, outside the valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedFloatInRangeTest">
            <summary>
            Test converting from float to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedFloatInRangeTest">
            <summary>
            Test converting from BigDecimal to float with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedFloatOverflowTest">
            <summary>
            Test converting from a BigDecimal to float with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingFloatInRangeTest">
            <summary>
            Test converting from a BigDecimal to float, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingFloatOverflowTest">
            <summary>
            Test converting from a BigDecimal to float, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.GetDoubleTestValues">
            <summary>
            A few test values for double.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._doubleNegInf">
            <summary>
            Test value for negative overflow for double.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._doublePosInf">
            <summary>
            Test value for positive overflow for double.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToDouble">
            <summary>
            Test casting from BigDecimal to double and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ReturnsInfinityWhenCastingToDoubleOutsideOfValidRange">
            <summary>
            Test casting from BigDecimal to double, outside the valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedDoubleInRangeTest">
            <summary>
            Test converting from double to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedDoubleInRangeTest">
            <summary>
            Test converting from BigDecimal to double with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedDoubleOverflowTest">
            <summary>
            Test converting from a BigDecimal to double with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingDoubleInRangeTest">
            <summary>
            Test converting from a BigDecimal to double, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingDoubleOverflowTest">
            <summary>
            Test converting from a BigDecimal to double, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.GetDecimalTestValues">
            <summary>
            A few test values for decimal.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._decimalNegInf">
            <summary>
            Test value for negative overflow for decimal.
            </summary>
        </member>
        <member name="F:Galaxon.BigNumbers.BigDecimalTests.ConversionTests._decimalPosInf">
            <summary>
            Test value for positive overflow for decimal.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ValidCastsToDecimal">
            <summary>
            Test casting from BigDecimal to decimal and back.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.ThrowsExceptionWhenCastingToDecimalOutsideOfValidRange">
            <summary>
            Test casting from BigDecimal to decimal, outside the valid range for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertFromCheckedDecimalInRangeTest">
            <summary>
            Test converting from decimal to BigDecimal with overflow check, within the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedDecimalInRangeTest">
            <summary>
            Test converting from BigDecimal to decimal with overflow check, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToCheckedDecimalOverflowTest">
            <summary>
            Test converting from a BigDecimal to decimal with overflow check, outside the valid range
            for that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingDecimalInRangeTest">
            <summary>
            Test converting from a BigDecimal to decimal, with saturation, within the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConversionTests.TryConvertToSaturatingDecimalOverflowTest">
            <summary>
            Test converting from a BigDecimal to decimal, with saturation, outside the valid range for
            that type.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ConvertTests.TestTryConvertFromCheckedDouble">
             <summary>
            
             </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ExpLogTests.TestSqrtBig">
            <summary>
            Used https://keisan.casio.com/calculator to get expected result.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ExpLogTests.TestSqrtSmall">
            <summary>
            Used https://keisan.casio.com/calculator to get expected result.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ExpLogTests.TestSqrtBiggerThanBiggestDouble">
            <summary>
            In this test, both the initial argument and the square root are larger than the largest
            possible double value.
            Used https://keisan.casio.com/calculator to get expected result.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ExpLogTests.TestSqrtSmallerThanSmallestDouble">
            <summary>
            In this test, both the initial argument and the square root are smaller than the largest
            possible double value.
            Used https://keisan.casio.com/calculator to get expected result.
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.ExpLogTests.TestCubeRootOfNegativeValueUsingPow">
            <summary>
            This shows how the cube root of a negative value cannot be achieved using Pow(), because a
            BigDecimal cannot represent 1/3 exactly. You have to use Cbrt() or RootN().
            </summary>
        </member>
        <member name="M:Galaxon.BigNumbers.BigDecimalTests.RoundTests.TestRoundingMethods">
            <summary>
            Check BigDecimal.Round() matches decimal.Round() for all rounding methods.
            </summary>
        </member>
    </members>
</doc>
